 /*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define AS(keycode) &as LS(keycode) keycode
#define TAP_MS 200
#define U_MOUSE_MOVE_MAX 1500

#define LOWER 1
#define RAISED 2
#define ADJUST 3

&mt {
  flavor = "tap-preferred";
  tapping-term-ms = <TAP_MS>;
  quick-tap-ms = <TAP_MS>;
  hold-trigger-key-positions = <0>;
};

&lt {
  flavor = "tap-preferred";
  tapping-term-ms = <TAP_MS>;
  quick-tap-ms = <TAP_MS>;
};

&mmv {
  acceleration-exponent = <1>;
  time-to-max-speed-ms = <1000>;
  delay-ms = <0>;                   
};

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

/ {
    behaviors {
        as: auto_shift {
                compatible = "zmk,behavior-hold-tap";
                label = "AUTO_SHIFT";
                #binding-cells = <2>;
                tapping_term_ms = <TAP_MS>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISED>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
            compatible = "zmk,keymap";
            default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |B/LGUI|  |  N  |  M   |  ,  |  .  |  /  |  `   |
//                    | CTL | ALT |SPC/LWR| |ENT/RSE| ALT  | LGUI |
                        bindings = <
   &kp ESC     &kp Q &kp W     &kp E &kp R &kp T        &kp Y        &kp U      &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL   &kp A &kp S     &kp D &kp F &kp G        &kp H        &kp J      &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT   &kp Z &kp X     &kp C &kp V &kp B        &kp N        &kp M      &kp COMMA &kp DOT &kp FSLH &kp ESC
                   &kp RGUI &kp LOWER &kp  SPACE        &kp  RET     &kp RAISED &kp RALT
                        >;
                };
            lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | CTRL | ML  | MD  | MU  | MR  | MSU |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     | MLC | MRC | MSD |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | ALT |     | SPC |   | ENT |     | ALT |
                        bindings = <
&kp TAB          &kp N1           &kp N2             &kp N3            &kp N4           &kp N5           &kp N6           &kp N7           &kp N8          &kp N9           &kp N0    &kp BSPC
&mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_UP       &mmv MOVE_RIGHT   &mkp RCLK        &mkp LCLK        &kp LEFT         &kp DOWN         &kp UP          &kp RIGHT        &trans    &kp PAGE_UP
&kp LSHFT        &trans           &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp C_MUTE       &kp CAPS         &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_UP   &mmv MOVE_RIGHT   &trans    &kp PAGE_DOWN
                                                     &kp LGUI          &trans           &kp SPACE        &kp RET          &trans           &kp LEFT_ALT
                        >;
            };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB   &kp EXCL  &kp AT    &kp HASH    &kp DLLR     &kp PRCNT       &kp CARET   &kp AMPS    &kp KP_MULTIPLY  &kp LPAR  &kp RPAR    &kp RIGHT_CONTROL
&kp F1    &kp F2    &kp F3    &kp F4      &kp F5       &kp F6          &kp MINUS   &kp EQUAL   &kp LBKT         &kp RBKT  &kp BSLH    &kp GRAVE
&kp F7    &kp F8    &kp F9    &kp F10     &kp F11      &kp F12         &kp UNDER   &kp PLUS    &kp LBRC         &kp RBRC  &kp PIPE    &kp TILDE
                             &kp LGUI     &trans       &kp SPACE       &kp RET     &trans      &kp RALT
            >;
        };

            adjust_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | ALT |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB   &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT      &kp CARET     &kp AMPS       &kp KP_MULTIPLY &kp LPAR      &kp RPAR &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &mt HOME LEFT &mt PG_DN DOWN &mt PG_UP UP    &mt END RIGHT &trans   &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans        &trans         &trans          &trans        &trans   &trans
                                                     &trans       &trans         &trans        &trans         &trans          &trans
                        >;                  
                };
     };
};
